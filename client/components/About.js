import React from 'react';
import Container from 'react-bootstrap/Container';
import { Layout } from './Layout.js';

class About extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return (
      <Layout>
        <Container>
          <p>
            About Page
          </p>
          <p>
          Fourier is a source code summarizer that uses natural language processing to summarize code into human readable phrases. It is a simple tool that is designed to increase the speed at which developers learn and understand code written by others.

          Fourier is not meant to replace the human reader, but to augment them. This tool hopefully makes understanding convoluted code bases and complex programming languages much easier and much less time-intensive.
          </p>
          <p>
            Current Functionality:
            So far Fourier only processes simple javascript translations.

            Fourier is still in its proof of concept phase and is NOT built for performance.

            The NLP translation model is built from scratch using Tensorflow and Keras.
            The model is trained using a manually crafted dataset of ##### entries.
            The data itself is comprised of Abstract Syntax Trees generated by the <a ref="https://www.npmjs.com/package/acorn">Acorn</a> npm package.
            The ASTs are parsed, trimmed, and processed into a digestible form for the model.

            The model itself is classified as a Sequence-to-Sequence machine learning algorithm.
            It features an encoder and decoder, each a composite of neural network layers built with LSTM neuron layers.
            The code for the model and its performance metrics can be found on Kaggle at <a ref="https://www.kaggle.com/cf1111/fourier2/notebook">Fourier</a>
          </p>
          <p>
            When code (in the form of an AST) is submitted to the Fourier backend, it goes through further transformations
            that eventually convert it into integer values that the model then reads to predict the human words it has learned to
            correlate with those sequences.
            The model then returns its own predicted sequence of english words that match the input code sequence.
          </p>
        </Container>
      </Layout>
    );
  }
}

export { About };